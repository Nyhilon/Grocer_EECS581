# -*- coding: utf-8 -*-
"""Recmmendation_system.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MJF08gvhaFDDUfb4-peHVfabD3drBJrH
"""

#importing libraries
import pandas as pd 
import numpy as np
from nltk.tokenize import RegexpTokenizer
from ast import literal_eval
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.metrics.pairwise import cosine_similarity

#Function to parse Ingredients from the recipe
def get_ingredients(list):
  ingredients = []
  for i in literal_eval(list):
    if i['job'] == 'Ingredients':
      ingredients.append(i['ingredient'].lower())
  return ingredients

def get_names(list, n):
  names = []
  if n ==0:
    for i in literal_eval(list):
      names.append(i['ingredient'].lower())
  else:
    length = n
    for i in literal_eval(list):
      names.append(i['ingredient'].lower())
      if len(names) > length:
        break
  return names

def rem_names(list):
  names = []
  for i in list:
    names.append(i.replace(" ", " "))
  return names

def recommender(recipe):
  ndx = X['Recipe_Name'] == recipe
  index = X[ndx].index[0]
  kk = []
  for i in range(len(similarity[index])):
    kk.append([i, similarity[index][i]])
  recommend = sorted(kk, key = lambda x:x[1], reverse = True)
  for i in recommend[1:7]:
    print(X.iloc[i[0]].Recipe_Name)