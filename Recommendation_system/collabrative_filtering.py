# -*- coding: utf-8 -*-
"""Collabrative_filtering.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VlEemY3hKxSkNVBOW2lX1eyoSukDnqoj
"""

#Libraries
import pandas as pd
import numpy as np 
from  scipy.sparse.linalg import svds

def C_recommender(predicted_rating, userId, num_rccom):
	predicted_rating = predicted_rating.iloc[(userId-1)]
	# print(predicted_rating)


	new_data = data_rating[data_rating.userId == (userId)]

	new_full = new_data.merge(data_movies,  on= 'RecipeID')
	new_full = new_full.sort_values(['rating'], ascending=False)
	# print(new_full)

	recommendations = (data_movies[~data_movies['RecipeID'].isin(new_full['RecipeID'])])
	recommendations = recommendations.merge(pd.DataFrame(predicted_rating).reset_index(), on = 'RecipeID')
	print(recommendations)

	recommendations = recommendations.sort_values(userId, ascending=False)
	
	for i in range(num_rccom):
		print(recommendations.iloc[i].title)
	print


data_rating = pd.read_csv("ratings.csv")
data_rating = data_rating.drop('timestamp', axis=1)



group_user_ratings = data_rating.groupby('userId')['rating']


data_rating.dropna(inplace=True)


pivot_data = data_rating.pivot(index = 'userId', columns = 'RecipeID', values = 'rating').fillna(0)

array_data = pivot_data.values
data_rating_mean = np.mean(array_data, axis = 1)
array_normalized = array_data - data_rating_mean.reshape(-1,1)

U, sigma, Vt = svds(array_normalized, k = 20)

sigma = np.diag(sigma)# make the diagonal matrix form of sigma

predicted_rating = np.dot(np.dot(U, sigma), Vt) + data_rating_mean.reshape(-1,1)

predicted_rating = pd.DataFrame(predicted_rating, columns = pivot_data.columns, index = pivot_data.index)

data_movies = pd.read_csv("Recipes.csv")



data_movies = pd.DataFrame(data_movies, columns = ['RecipeID','Recipe_name','Cuisine'])

C_recommender(predicted_rating, 5, 5)